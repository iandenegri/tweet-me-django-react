{"version":3,"sources":["logo.svg","tweets/utils.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["lookup","method","endpoint","callback","data","json_data","JSON","stringify","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","xhr","XMLHttpRequest","url","responseType","open","setRequestHeader","onload","status","window","location","href","indexOf","response","onerror","e","console","log","send","apiTweetCreate","newTweetData","content","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","TweetsComponent","props","canTweet","useState","newTweets","setNewTweets","textAreaRef","React","createRef","className","onSubmit","preventDefault","tweetContent","current","value","tempNewTweets","unshift","alert","ref","required","type","TweetsList","TweetFeedList","tweetsInit","setTweetsInit","tweetsList","setTweetsList","tweetsDidGet","setTweetsDidGet","setNextUrl","useEffect","finalList","concat","next","results","handleDidRetweet","newTweet","updatedTweetsInit","updatedTweetsList","Fragment","map","item","index","Tweet","tweet","didRetweet","onClick","event","TweetDetailComponent","tweetId","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","ParentTweet","retweeter","parent","hideActions","isRetweet","AuthorPicture","author","AuthorLink","first_name","children","AuthorNameDisplay","nameDisplay","includeFullName","last_name","actionTweet","setActionTweet","isDetailView","path","pathname","idRegex","match","groups","tweetid","id","handlePerformAction","newActionTweetResponse","ActionBtn","didPerformAction","action","likes","buttonText","toString","handleTweetActionEvent","tweetID","apiTweetAction","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultElem","getElementById","tweetme2Elem","tweetFeedElem","tweetDetailElem","querySelectorAll","createElement","ReactDOM","render","StrictMode","passedData","dataset","tweetsCompElem","FeedCompElem","forEach","container","tweetDetailCompElem"],"mappings":"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","file":"static/js/main.afd0afc1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Django provided func\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction lookup(method, endpoint, callback, data){\r\n  let json_data;\r\n  if (data){\r\n    json_data = JSON.stringify(data);\r\n  }\r\n\r\n  const csrftoken = getCookie('csrftoken');\r\n  const xhr = new XMLHttpRequest();\r\n  const url = `http://localhost:8000/api${endpoint}`;\r\n  const responseType = 'json';\r\n\r\n  xhr.responseType = responseType;\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n  if (csrftoken){\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403 | xhr.status === 415 | xhr.status === 400){\r\n      if (window.location.href.indexOf(\"login\") === -1){\r\n        window.location.href = \"/login/?showLoginRequired=true\";\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  }\r\n  xhr.onerror = function(e){\r\n    console.log(e);\r\n    callback({\"message\": \"Error occurred when fetching tweets.\"});\r\n  }\r\n  xhr.send(json_data);\r\n\r\n}\r\n\r\nexport function apiTweetCreate(newTweetData, callback){\r\n  let data = {content: newTweetData};\r\n  lookup(\"POST\", \"/tweets/create/\", callback, data);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl){\r\n  let endpoint = \"/tweets/\" \r\n  if (username){\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined){\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\r\n  }\r\n  lookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl){\r\n  let endpoint = \"/tweets/feed/\"\r\n  if (nextUrl !== null && nextUrl !== undefined){\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\r\n  }\r\n  lookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback){\r\n  let endpoint = `/tweets/${tweetId}`;\r\n  lookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetAction(tweetID, action, callback){\r\n  let data = {id: tweetID, action: action}\r\n  lookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {apiTweetCreate, apiTweetList, apiTweetAction, apiTweetDetail, apiTweetFeed} from './utils';\r\n\r\nexport function TweetsComponent(props){\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const textAreaRef = React.createRef();\r\n\r\n  // Code to handle creating tweet\r\n  const handleSubmit = function(e){\r\n    e.preventDefault();\r\n\r\n    const tweetContent = textAreaRef.current.value;\r\n    let tempNewTweets = [...newTweets];\r\n    \r\n    apiTweetCreate(tweetContent, (response, status)=>{\r\n      if (status === 201){\r\n        tempNewTweets.unshift(response);\r\n        setNewTweets(tempNewTweets);\r\n      } else {\r\n        console.log(response);\r\n        alert(\"An error occured when creating your Tweet.\")\r\n      }\r\n    });\r\n    textAreaRef.current.value = '';\r\n  }\r\n  // Component code\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet && <div className=\"col-12 mb-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea ref={textAreaRef} className=\"form-control\" name=\"tweet\" required={true}></textarea>\r\n          <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\r\n        </form>\r\n      </div>}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function FeedComponent(props){\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const textAreaRef = React.createRef();\r\n\r\n  // Code to handle creating tweet\r\n  const handleSubmit = function(e){\r\n    e.preventDefault();\r\n\r\n    const tweetContent = textAreaRef.current.value;\r\n    let tempNewTweets = [...newTweets];\r\n    \r\n    apiTweetCreate(tweetContent, (response, status)=>{\r\n      if (status === 201){\r\n        tempNewTweets.unshift(response);\r\n        setNewTweets(tempNewTweets);\r\n      } else {\r\n        console.log(response);\r\n        alert(\"An error occured when creating your Tweet.\")\r\n      }\r\n    });\r\n    textAreaRef.current.value = '';\r\n  }\r\n  // Component code\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet && <div className=\"col-12 mb-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea ref={textAreaRef} className=\"form-control\" name=\"tweet\" required={true}></textarea>\r\n          <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\r\n        </form>\r\n      </div>}\r\n      <TweetFeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function TweetFeedList(props){\r\n  const username = props.username;\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweetsList, setTweetsList] = useState([]);\r\n  const [tweetsDidGet, setTweetsDidGet] = useState(false);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n\r\n  const addNewTweets = () => {\r\n    const finalList = [...props.newTweets].concat(tweetsInit);\r\n    if (finalList.length !== tweetsList.length){\r\n      setTweetsList(finalList);\r\n    }\r\n  }\r\n\r\n  const tweetsLookup = () => {\r\n    // If we haven't gotten tweets, get them\r\n    if (tweetsDidGet === false){\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200){\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidGet(true);\r\n        } else {\r\n          alert(\"there was an error!\");\r\n        }\r\n      }\r\n  \r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }\r\n  useEffect(addNewTweets, [props.newTweets, tweetsInit, tweetsList]);\r\n  useEffect(tweetsLookup, [tweetsDidGet, username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updatedTweetsInit = [...tweetsInit];\r\n    updatedTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updatedTweetsInit);\r\n\r\n    const updatedTweetsList = [...tweetsList];\r\n    updatedTweetsList.unshift(newTweet);\r\n    setTweetsList(updatedTweetsList);\r\n  }\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null){\r\n      const handleLoadNextResponse = (response, status)=>{\r\n        if (status === 200){\r\n          const newTweets = [...tweetsList].concat(response.results)\r\n          setNextUrl(response.next);\r\n          setTweetsInit(newTweets);\r\n          setTweetsList(newTweets);\r\n        } else {\r\n          alert(\"there was an error!\");\r\n        }\r\n      }\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return (<React.Fragment>{\r\n    tweetsList.map((item, index) => {\r\n      return <Tweet tweet={item} key={`${index}-{item.id}`} didRetweet={handleDidRetweet} className=\"my-5 py-5 border bg-white text-dark\"/>\r\n    })}\r\n    { nextUrl !== null && <button className='btn btn-outline-primary' onClick={handleLoadNext}>Load Next</button>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const tweetId = props.tweetId;\r\n  const className = props.className;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200){\r\n      setTweet(response);\r\n    } else {\r\n      alert(\"There was an error finding the tweet.\");\r\n    }\r\n  }\r\n\r\n  const backendCall = () => {\r\n    if (didLookup === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }\r\n\r\n  useEffect(backendCall, [tweetId, didLookup, setDidLookup]);\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={className} />\r\n}\r\n\r\nexport function ParentTweet(props){\r\n  const tweet = props.tweet;\r\n  const retweeter = props.retweeter;\r\n  return tweet.parent ? <Tweet className={' '} tweet={tweet.parent} retweeter={retweeter} hideActions isRetweet /> : null;\r\n}\r\n\r\nexport function AuthorPicture(props){\r\n  const author = props.author;\r\n  return (\r\n    <AuthorLink username={author.username}><span className=\"mx-1 my-3 rounded-circle px-3 py-2 bg-dark text-white\">{author.first_name[0]}</span></AuthorLink>\r\n  )\r\n}\r\n\r\nexport function AuthorLink(props){\r\n  const username = props.username;\r\n  const handleAuthorLink = (event) => {\r\n    window.location.href = `/profile/${username}`\r\n  }\r\n\r\n  return (\r\n    <span className='pointer' onClick={handleAuthorLink}>\r\n    {props.children}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport function AuthorNameDisplay(props){\r\n  const author = props.author;\r\n  const includeFullName = props.includeFullName;\r\n  const nameDisplay = includeFullName === true ? `${author.first_name} ${author.last_name}` : null\r\n\r\n  return (\r\n    <React.Fragment>{nameDisplay}{\" \"}\r\n    <AuthorLink username={author.username}>@{author.username}</AuthorLink>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport function Tweet(props){\r\n    const tweet = props.tweet;\r\n    const didRetweet = props.didRetweet;\r\n    const hideActions = props.hideActions;\r\n    const isRetweet = props.isRetweet;\r\n    const retweeter = props.retweeter;\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\r\n    let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n    className = isRetweet === true ? `${className} border rounded p-2` : className;\r\n\r\n    let isDetailView = false;\r\n    let path = window.location.pathname;\r\n    let idRegex = /(?<tweetid>\\d+)/;\r\n    let match = path.match(idRegex);\r\n    let tweetId = match ? match.groups.tweetid : -1;\r\n    if (`${tweetId}` === `${tweet.id}`){\r\n      isDetailView = true;\r\n    }\r\n\r\n    const handlePerformAction = (newActionTweetResponse, status) => {\r\n      if (status === 200){\r\n        setActionTweet(newActionTweetResponse);\r\n      } else if (status === 201) {\r\n        if (didRetweet){\r\n          didRetweet(newActionTweetResponse);\r\n        }\r\n      }\r\n    }\r\n\r\n    const handleTweetDetailLink = (event) => {\r\n      event.preventDefault();\r\n      window.location.href=`/${tweet.id}`\r\n    }\r\n\r\n    return (\r\n    <div className={className}>\r\n      {isRetweet === true && <div className=\"mb-2\"><span className=\"small text-muted\">Retweet via: <AuthorNameDisplay author={retweeter} includeFullName={false} /></span></div>}\r\n      <div className=\"d-flex\">\r\n        <div className=\"\">\r\n          <AuthorPicture author={tweet.author} />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <div>\r\n            <AuthorNameDisplay author={tweet.author} includeFullName={true} />\r\n            <p>{tweet.content}</p>\r\n            <ParentTweet tweet={tweet} retweeter={tweet.author}/>\r\n          </div>\r\n          <div className=\"btn btn-group px-0\">\r\n            {(actionTweet && hideActions !== true) && <React.Fragment>\r\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action=\"Like\" />\r\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action=\"Unlike\" />\r\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action=\"Retweet\" />\r\n            </React.Fragment>}\r\n            {isDetailView === false && <button className=\"btn btn-outline-primary btn-sm\"onClick={handleTweetDetailLink}>View</button>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n  \r\nexport function TweetsList(props){\r\n  const username = props.username;\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweetsList, setTweetsList] = useState([]);\r\n  const [tweetsDidGet, setTweetsDidGet] = useState(false);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n\r\n  const addNewTweets = () => {\r\n    const finalList = [...props.newTweets].concat(tweetsInit);\r\n    if (finalList.length !== tweetsList.length){\r\n      setTweetsList(finalList);\r\n    }\r\n  }\r\n\r\n  const tweetsLookup = () => {\r\n    // If we haven't gotten tweets, get them\r\n    if (tweetsDidGet === false){\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200){\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidGet(true);\r\n        } else {\r\n          alert(\"there was an error!\");\r\n        }\r\n      }\r\n  \r\n      apiTweetList(username, handleTweetListLookup);\r\n    }\r\n  }\r\n  useEffect(addNewTweets, [props.newTweets, tweetsInit, tweetsList]);\r\n  useEffect(tweetsLookup, [tweetsDidGet, username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updatedTweetsInit = [...tweetsInit];\r\n    updatedTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updatedTweetsInit);\r\n\r\n    const updatedTweetsList = [...tweetsList];\r\n    updatedTweetsList.unshift(newTweet);\r\n    setTweetsList(updatedTweetsList);\r\n  }\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null){\r\n      const handleLoadNextResponse = (response, status)=>{\r\n        if (status === 200){\r\n          const newTweets = [...tweetsList].concat(response.results)\r\n          setNextUrl(response.next);\r\n          setTweetsInit(newTweets);\r\n          setTweetsList(newTweets);\r\n        } else {\r\n          alert(\"there was an error!\");\r\n        }\r\n      }\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return (<React.Fragment>{\r\n    tweetsList.map((item, index) => {\r\n      return <Tweet tweet={item} key={`${index}-{item.id}`} didRetweet={handleDidRetweet} className=\"my-5 py-5 border bg-white text-dark\"/>\r\n    })}\r\n    { nextUrl !== null && <button className='btn btn-outline-primary' onClick={handleLoadNext}>Load Next</button>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport function ActionBtn(props){\r\n  // Vars\r\n  const tweet = props.tweet;\r\n  const action = props.action;\r\n  const didPerformAction = props.didPerformAction;\r\n  const likes = tweet.likes ? tweet.likes : 0;\r\n  const styles = {\r\n      \"Like\": \"btn btn-primary btn-sm\",\r\n      \"Unlike\":\"btn btn-danger btn-sm\",\r\n      \"Retweet\": \"btn btn-success btn-sm\",\r\n      \"Unretweet\":\"btn btn-danger btn-sm\",\r\n  };\r\n  const className = props.className ? props.className : styles[props.action];\r\n  const buttonText = (props.action === \"Like\" ? likes.toString() + \" \" : \"\") + props.action + (props.action === \"Like\" ? \"(s)\" : \"\");\r\n\r\n  // Functions\r\n  const handleTweetActionEvent = (response, status) => {\r\n    console.log(response)\r\n    console.log(status)\r\n    if ((status === 200 || status === 201) && didPerformAction){\r\n      didPerformAction(response, status);\r\n    }\r\n  }\r\n\r\n  const handleClick =(event) => {\r\n    event.preventDefault();\r\n    console.log(tweet.id)\r\n    console.log(action)\r\n    apiTweetAction(tweet.id, action, handleTweetActionEvent);\r\n  }\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <TweetsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { TweetsComponent, TweetDetailComponent, FeedComponent } from './tweets';\n\nlet defaultElem = document.getElementById('root');\nlet tweetme2Elem = document.getElementById('tweetme2');\nlet tweetFeedElem = document.getElementById('tweetme2-feed');\nlet tweetDetailElem = document.querySelectorAll('.tweetme2-detail');\nconst e = React.createElement;\n\nif (defaultElem) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App defaultElem />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n}\nif (tweetme2Elem){\n  const passedData = tweetme2Elem.dataset;\n  const tweetsCompElem = e(TweetsComponent, passedData);\n\n  ReactDOM.render(\n    tweetsCompElem,\n    tweetme2Elem\n  );  \n}\n\nif (tweetFeedElem){\n  const passedData = tweetFeedElem.dataset;\n  const FeedCompElem = e(FeedComponent, passedData);\n\n  ReactDOM.render(\n    FeedCompElem,\n    tweetFeedElem\n  );  \n}\n\ntweetDetailElem.forEach(container=> {\n  const passedData = container.dataset;\n  const tweetDetailCompElem = e(TweetDetailComponent, passedData);\n  ReactDOM.render(\n    tweetDetailCompElem,\n    container\n  );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}