{"version":3,"sources":["logo.svg","tweets/utils.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["lookup","method","endpoint","callback","data","json_data","JSON","stringify","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","xhr","XMLHttpRequest","url","responseType","open","setRequestHeader","onload","status","window","location","href","response","onerror","e","console","log","send","TweetsComponent","props","canTweet","useState","newTweets","setNewTweets","textAreaRef","React","createRef","className","onSubmit","preventDefault","tweetContent","current","value","tempNewTweets","unshift","alert","content","ref","required","type","TweetsList","TweetDetailComponent","tweetId","didLookup","setDidLookup","tweet","setTweet","handleBackendLookup","useEffect","apiTweetDetail","Tweet","ParentTweet","parent","hideActions","didRetweet","actionTweet","setActionTweet","isDetailView","path","pathname","idRegex","match","groups","tweetid","id","handlePerformAction","newActionTweetResponse","Fragment","ActionBtn","didPerformAction","action","onClick","event","username","tweetsInit","setTweetsInit","tweetsList","setTweetsList","tweetsDidGet","setTweetsDidGet","finalList","concat","apiTweetList","handleDidRetweet","newTweet","updatedTweetsInit","updatedTweetsList","map","item","index","likes","buttonText","toString","handleTweetActionEvent","tweetID","apiTweetAction","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultElem","getElementById","tweetme2Elem","tweetDetailElem","querySelectorAll","createElement","ReactDOM","render","StrictMode","passedData","dataset","tweetsCompElem","forEach","container","tweetDetailCompElem"],"mappings":"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","file":"static/js/main.e16bc75a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Django provided func\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction lookup(method, endpoint, callback, data){\r\n  let json_data;\r\n  if (data){\r\n    json_data = JSON.stringify(data);\r\n  }\r\n\r\n  const csrftoken = getCookie('csrftoken');\r\n  const xhr = new XMLHttpRequest();\r\n  const url = `http://localhost:8000/api${endpoint}`;\r\n  const responseType = 'json';\r\n\r\n  xhr.responseType = responseType;\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n  if (csrftoken){\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403 | xhr.status === 415 | xhr.status === 400){\r\n      window.location.href = \"/login/?showLoginRequired=true\";\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  }\r\n  xhr.onerror = function(e){\r\n    console.log(e);\r\n    callback({\"message\": \"Error occurred when fetching tweets.\"});\r\n  }\r\n  xhr.send(json_data);\r\n\r\n}\r\n\r\nexport function apiTweetCreate(newTweetData, callback){\r\n  let data = {content: newTweetData};\r\n  lookup(\"POST\", \"/tweets/create/\", callback, data);\r\n}\r\n\r\nexport function apiTweetList(username, callback){\r\n  let endpoint = \"/tweets/\" \r\n  if (username){\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n  lookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback){\r\n  let endpoint = `/tweets/${tweetId}`;\r\n  lookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetAction(tweetID, action, callback){\r\n  let data = {id: tweetID, action: action}\r\n  lookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {apiTweetCreate, apiTweetList, apiTweetAction, apiTweetDetail} from './utils';\r\n\r\nexport function TweetsComponent(props){\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const textAreaRef = React.createRef();\r\n\r\n  // Code to handle creating tweet\r\n  const handleSubmit = function(e){\r\n    e.preventDefault();\r\n\r\n    const tweetContent = textAreaRef.current.value;\r\n    let tempNewTweets = [...newTweets];\r\n    \r\n    apiTweetCreate(tweetContent, (response, status)=>{\r\n      if (status === 201){\r\n        tempNewTweets.unshift(response);\r\n        setNewTweets(tempNewTweets);\r\n      } else {\r\n        console.log(response);\r\n        alert(\"An error occured when creating your Tweet.\")\r\n      }\r\n    });\r\n    textAreaRef.current.value = '';\r\n  }\r\n  // Component code\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet && <div className=\"col-12 mb-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea ref={textAreaRef} className=\"form-control\" name=\"tweet\" required={true}></textarea>\r\n          <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\r\n        </form>\r\n      </div>}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const tweetId = props.tweetId;\r\n  const className = props.className;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200){\r\n      setTweet(response);\r\n    } else {\r\n      alert(\"There was an error finding the tweet.\");\r\n    }\r\n  }\r\n\r\n  const backendCall = () => {\r\n    if (didLookup === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }\r\n\r\n  useEffect(backendCall, [tweetId, didLookup, setDidLookup]);\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={className} />\r\n}\r\n\r\nexport function ParentTweet(props){\r\n  const tweet = props.tweet;\r\n  return tweet.parent ? (\r\n    <div className=\"row\">\r\n      <div className=\"col-11 mx-auto p-3 border rounded\">\r\n        <p className=\"mb-0 text-muted small\">Retweet:</p>\r\n        <Tweet className={' '} tweet={tweet.parent} hideActions />\r\n      </div>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport function Tweet(props){\r\n    const tweet = props.tweet;\r\n    const didRetweet = props.didRetweet;\r\n    const hideActions = props.hideActions;\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\r\n    const className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n\r\n    let isDetailView = false;\r\n    let path = window.location.pathname;\r\n    let idRegex = /(?<tweetid>\\d+)/;\r\n    let match = path.match(idRegex);\r\n    let tweetId = match ? match.groups.tweetid : -1;\r\n    if (`${tweetId}` === `${tweet.id}`){\r\n      isDetailView = true;\r\n    }\r\n\r\n    const handlePerformAction = (newActionTweetResponse, status) => {\r\n      if (status === 200){\r\n        setActionTweet(newActionTweetResponse);\r\n      } else if (status === 201) {\r\n        if (didRetweet){\r\n          didRetweet(newActionTweetResponse);\r\n        }\r\n      }\r\n    }\r\n\r\n    const handleTweetDetailLink = (event) => {\r\n      event.preventDefault();\r\n      window.location.href=`/${tweet.id}`\r\n    }\r\n\r\n    return (\r\n    <div className={className}>\r\n      <div>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <ParentTweet tweet={tweet} />\r\n      </div>\r\n      <div className=\"btn btn-group\">\r\n        {(actionTweet && hideActions !== true) && <React.Fragment>\r\n          <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action=\"Like\" />\r\n          <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action=\"Unlike\" />\r\n          <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action=\"Retweet\" />\r\n        </React.Fragment>}\r\n        {isDetailView === false && <button className=\"btn btn-outline-primary btn-sm\"onClick={handleTweetDetailLink}>View</button>}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n  \r\nexport function TweetsList(props){\r\n  const username = props.username;\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweetsList, setTweetsList] = useState([]);\r\n  const [tweetsDidGet, setTweetsDidGet] = useState(false);\r\n\r\n  const addNewTweets = () => {\r\n    const finalList = [...props.newTweets].concat(tweetsInit);\r\n    if (finalList.length !== tweetsList.length){\r\n      setTweetsList(finalList);\r\n    }\r\n  }\r\n\r\n  const tweetsLookup = () => {\r\n    // If we haven't gotten tweets, get them\r\n    if (tweetsDidGet === false){\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200){\r\n          setTweetsInit(response);\r\n          setTweetsDidGet(true);\r\n        }\r\n      }\r\n  \r\n      apiTweetList(username, handleTweetListLookup);\r\n    }\r\n  }\r\n  useEffect(addNewTweets, [props.newTweets, tweetsInit, tweetsList]);\r\n  useEffect(tweetsLookup, [tweetsDidGet, username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updatedTweetsInit = [...tweetsInit];\r\n    updatedTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updatedTweetsInit);\r\n\r\n    const updatedTweetsList = [...tweetsList];\r\n    updatedTweetsList.unshift(newTweet);\r\n    setTweetsList(updatedTweetsList);\r\n  }\r\n\r\n  return (\r\n    tweetsList.map((item, index) => {\r\n      return <Tweet tweet={item} key={`${index}-{item.id}`} didRetweet={handleDidRetweet} className=\"my-5 py-5 border bg-white text-dark\"/>\r\n    })\r\n  )\r\n}\r\n\r\nexport function ActionBtn(props){\r\n  // Vars\r\n  const tweet = props.tweet;\r\n  const action = props.action;\r\n  const didPerformAction = props.didPerformAction;\r\n  const likes = tweet.likes ? tweet.likes : 0;\r\n  const styles = {\r\n      \"Like\": \"btn btn-primary btn-sm\",\r\n      \"Unlike\":\"btn btn-danger btn-sm\",\r\n      \"Retweet\": \"btn btn-success btn-sm\",\r\n      \"Unretweet\":\"btn btn-danger btn-sm\",\r\n  };\r\n  const className = props.className ? props.className : styles[props.action];\r\n  const buttonText = (props.action === \"Like\" ? likes.toString() + \" \" : \"\") + props.action + (props.action === \"Like\" ? \"(s)\" : \"\");\r\n\r\n  // Functions\r\n  const handleTweetActionEvent = (response, status) => {\r\n    console.log(response)\r\n    console.log(status)\r\n    if ((status === 200 || status === 201) && didPerformAction){\r\n      didPerformAction(response, status);\r\n    }\r\n  }\r\n\r\n  const handleClick =(event) => {\r\n    event.preventDefault();\r\n    console.log(tweet.id)\r\n    console.log(action)\r\n    apiTweetAction(tweet.id, action, handleTweetActionEvent);\r\n  }\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <TweetsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { TweetsComponent, TweetDetailComponent } from './tweets';\n\nlet defaultElem = document.getElementById('root');\nlet tweetme2Elem = document.getElementById('tweetme2');\nlet tweetDetailElem = document.querySelectorAll('.tweetme2-detail');\nconst e = React.createElement;\n\nif (defaultElem) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App defaultElem />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n}\nif (tweetme2Elem){\n  const passedData = tweetme2Elem.dataset;\n  const tweetsCompElem = e(TweetsComponent, passedData);\n\n  ReactDOM.render(\n    tweetsCompElem,\n    tweetme2Elem\n  );  \n}\n\ntweetDetailElem.forEach(container=> {\n  const passedData = container.dataset;\n  const tweetDetailCompElem = e(TweetDetailComponent, passedData);\n  ReactDOM.render(\n    tweetDetailCompElem,\n    container\n  );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}